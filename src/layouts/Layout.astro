import type { SeoInput } from '../lib/seo';
import {
  buildArticleJsonLd,
  buildMetaTags,
  buildOrganizationJsonLd,
  resolveSeo,
} from '../lib/seo';

type Props = SeoInput;

const props = Astro.props as Props;
const seo = resolveSeo(props);
const metaTags = buildMetaTags(props);
const organizationJsonLd = buildOrganizationJsonLd();
const articleJsonLd = buildArticleJsonLd(props);
const analyticsToken =
  import.meta.env.PUBLIC_CF_ANALYTICS_TOKEN ?? import.meta.env.PUBLIC_CLOUDFLARE_ANALYTICS_TOKEN;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <meta name="generator" content={Astro.generator} />
  <title>{seo.title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

    {metaTags.map((entry) =>
      entry.tag === 'meta' ? (
        <meta {...entry.attrs} />
      ) : (
        <link {...entry.attrs} />
      )
    )}

    <script type="application/ld+json" is:inline>{JSON.stringify(organizationJsonLd)}</script>
    {articleJsonLd && (
      <script type="application/ld+json" is:inline>{JSON.stringify(articleJsonLd)}</script>
    )}
  </head>
  <body class="min-h-screen bg-charcoal text-off-white">
    <slot />

    {analyticsToken && (
      <script
        defer
        src="https://static.cloudflareinsights.com/beacon.min.js"
        data-cf-beacon={`{"token": "${analyticsToken}"}`}
      ></script>
    )}
  </body>
</html>